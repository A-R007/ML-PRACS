import pandas as pd
import numpy as np
import statsmodels.api as sm
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

np.random.seed(42)

data = {
    'hrs_studied': np.random.uniform(1, 10, 100),
    'attendance': np.random.uniform(70, 100, 100),
    'prev_scores': np.random.uniform(50, 100, 100),
    'exam_score': np.random.uniform(50, 100, 100)
}
df = pd.DataFrame(data)

X = df[['hrs_studied', 'attendance', 'prev_scores']]
y = df['exam_score']
X = sm.add_constant(X)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = sm.OLS(y_train, X_train).fit()

def significant_features(model):
    return model.pvalues[model.pvalues < 0.05].index.tolist()

sig_feats = significant_features(model)

print("Significant features:", sig_feats)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

model_scaled = sm.OLS(y_train, X_train_scaled).fit()

print("Enter values for the following inputs:")
user_input = input("Enter hrs_studied, attendance, prev_scores (comma-separated): ")
try:
    u = [float(x.strip()) for x in user_input.split(',')]
    if len(u) != 3:
        raise ValueError("Please enter exactly three values.")
except ValueError as e:
    print(f"Invalid input: {e}")
    exit()
u_with_const = [1] + u
u_scaled = scaler.transform([u_with_const])
predicted_score = model_scaled.predict(u_scaled)
print("Predicted Exam Score:", predicted_score[0])
